
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  name: 'name',
  price: 'price',
  model: 'model',
  company: 'company',
  fuelType: 'fuelType',
  registeredYear: 'registeredYear',
  kilometers: 'kilometers',
  registeredState: 'registeredState',
  vehicleType: 'vehicleType',
  ownership: 'ownership',
  power: 'power',
  door: 'door',
  drive: 'drive',
  transmission: 'transmission',
  exteriorColor: 'exteriorColor',
  manufacturingYear: 'manufacturingYear',
  seatingCapacity: 'seatingCapacity',
  entertainment: 'entertainment',
  airbags: 'airbags',
  features: 'features',
  images: 'images',
  featured: 'featured',
  isForRent: 'isForRent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.FuelType = exports.$Enums.FuelType = {
  Petrol: 'Petrol',
  Diesel: 'Diesel',
  Electric: 'Electric',
  Hybrid: 'Hybrid',
  CNG: 'CNG',
  LPG: 'LPG'
};

exports.VehicleType = exports.$Enums.VehicleType = {
  Sedan: 'Sedan',
  SUV: 'SUV',
  Hatchback: 'Hatchback',
  MUV: 'MUV',
  Luxury: 'Luxury',
  Convertible: 'Convertible',
  Coupe: 'Coupe',
  Wagon: 'Wagon',
  Van: 'Van',
  Jeep: 'Jeep'
};

exports.OwnershipType = exports.$Enums.OwnershipType = {
  FirstOwner: 'FirstOwner',
  SecondOwner: 'SecondOwner',
  ThirdOwner: 'ThirdOwner',
  FourthPlus: 'FourthPlus'
};

exports.DriveType = exports.$Enums.DriveType = {
  FWD: 'FWD',
  RWD: 'RWD',
  AWD: 'AWD',
  FourWD: 'FourWD'
};

exports.TransmissionType = exports.$Enums.TransmissionType = {
  Manual: 'Manual',
  Automatic: 'Automatic'
};

exports.CompanyType = exports.$Enums.CompanyType = {
  Maruti: 'Maruti',
  Hyundai: 'Hyundai',
  Tata: 'Tata',
  Mahindra: 'Mahindra',
  Toyota: 'Toyota',
  Honda: 'Honda',
  Kia: 'Kia',
  MG: 'MG',
  Skoda: 'Skoda',
  Volkswagen: 'Volkswagen',
  Ford: 'Ford',
  Renault: 'Renault',
  Nissan: 'Nissan',
  Mercedes: 'Mercedes',
  BMW: 'BMW',
  Audi: 'Audi',
  Lexus: 'Lexus',
  Volvo: 'Volvo',
  Jaguar: 'Jaguar',
  LandRover: 'LandRover',
  Porsche: 'Porsche',
  Ferrari: 'Ferrari',
  Lamborghini: 'Lamborghini',
  Rolls: 'Rolls',
  Bentley: 'Bentley',
  Jeep: 'Jeep',
  Other: 'Other'
};

exports.Prisma.ModelName = {
  Vehicle: 'Vehicle'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\HP\\OneDrive\\Desktop\\luxurymachines\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\HP\\OneDrive\\Desktop\\luxurymachines\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Enums for vehicle options\nenum FuelType {\n  Petrol\n  Diesel\n  Electric\n  Hybrid\n  CNG\n  LPG\n}\n\nenum VehicleType {\n  Sedan\n  SUV\n  Hatchback\n  MUV\n  Luxury\n  Convertible\n  Coupe\n  Wagon\n  Van\n  Jeep\n}\n\nenum OwnershipType {\n  FirstOwner  @map(\"1st Owner\")\n  SecondOwner @map(\"2nd Owner\")\n  ThirdOwner  @map(\"3rd Owner\")\n  FourthPlus  @map(\"4th Owner or more\")\n}\n\nenum DriveType {\n  FWD\n  RWD\n  AWD\n  FourWD @map(\"4WD\")\n}\n\nenum TransmissionType {\n  Manual\n  Automatic\n}\n\nenum CompanyType {\n  Maruti      @map(\"Maruti Suzuki\")\n  Hyundai\n  Tata\n  Mahindra\n  Toyota\n  Honda\n  Kia\n  MG          @map(\"MG Motor\")\n  Skoda\n  Volkswagen\n  Ford\n  Renault\n  Nissan\n  Mercedes    @map(\"Mercedes-Benz\")\n  BMW\n  Audi\n  Lexus\n  Volvo\n  Jaguar\n  LandRover   @map(\"Land Rover\")\n  Porsche\n  Ferrari\n  Lamborghini\n  Rolls       @map(\"Rolls-Royce\")\n  Bentley\n  Jeep\n  Other\n}\n\nmodel Vehicle {\n  id                String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  slug              String   @unique\n  name              String\n  price             Float\n  model             String\n  company           String // Using String for backward compatibility, but values should match CompanyType enum\n  fuelType          String // Using String for backward compatibility, but values should match FuelType enum\n  registeredYear    Int\n  kilometers        Int\n  registeredState   String\n  vehicleType       String // Using String for backward compatibility, but values should match VehicleType enum\n  ownership         String // Using String for backward compatibility, but values should match OwnershipType enum\n  power             String?\n  door              Int?\n  drive             String? // Using String for backward compatibility, but values should match DriveType enum\n  transmission      String   @default(\"Manual\") // Using String for backward compatibility, but values should match TransmissionType enum\n  exteriorColor     String?\n  manufacturingYear Int?\n  seatingCapacity   Int?\n  entertainment     String? // front screen description\n  airbags           Int?\n  features          String[] // Array of vehicle features\n  images            String[] // Array of Cloudinary URLs\n  featured          Boolean  @default(false)\n  isForRent         Boolean  @default(false)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "f7d13ca7d2f30b13bed8feafed126ab385fc6257430dd3c9a5660e80c2162c8c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Vehicle\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"id\",\"dbName\":\"_id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"String\",\"nativeType\":[\"ObjectId\",[]],\"default\":{\"name\":\"auto\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"slug\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"name\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"price\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Float\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"model\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"company\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"fuelType\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"registeredYear\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"kilometers\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"registeredState\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"vehicleType\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"ownership\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"power\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"door\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"drive\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"transmission\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"String\",\"nativeType\":null,\"default\":\"Manual\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"exteriorColor\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"manufacturingYear\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"seatingCapacity\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"entertainment\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"airbags\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"features\",\"kind\":\"scalar\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"images\",\"kind\":\"scalar\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"featured\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Boolean\",\"nativeType\":null,\"default\":false,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"isForRent\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Boolean\",\"nativeType\":null,\"default\":false,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"nativeType\":null,\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":true}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false}},\"enums\":{\"FuelType\":{\"values\":[{\"name\":\"Petrol\",\"dbName\":null},{\"name\":\"Diesel\",\"dbName\":null},{\"name\":\"Electric\",\"dbName\":null},{\"name\":\"Hybrid\",\"dbName\":null},{\"name\":\"CNG\",\"dbName\":null},{\"name\":\"LPG\",\"dbName\":null}],\"dbName\":null},\"VehicleType\":{\"values\":[{\"name\":\"Sedan\",\"dbName\":null},{\"name\":\"SUV\",\"dbName\":null},{\"name\":\"Hatchback\",\"dbName\":null},{\"name\":\"MUV\",\"dbName\":null},{\"name\":\"Luxury\",\"dbName\":null},{\"name\":\"Convertible\",\"dbName\":null},{\"name\":\"Coupe\",\"dbName\":null},{\"name\":\"Wagon\",\"dbName\":null},{\"name\":\"Van\",\"dbName\":null},{\"name\":\"Jeep\",\"dbName\":null}],\"dbName\":null},\"OwnershipType\":{\"values\":[{\"name\":\"FirstOwner\",\"dbName\":\"1st Owner\"},{\"name\":\"SecondOwner\",\"dbName\":\"2nd Owner\"},{\"name\":\"ThirdOwner\",\"dbName\":\"3rd Owner\"},{\"name\":\"FourthPlus\",\"dbName\":\"4th Owner or more\"}],\"dbName\":null},\"DriveType\":{\"values\":[{\"name\":\"FWD\",\"dbName\":null},{\"name\":\"RWD\",\"dbName\":null},{\"name\":\"AWD\",\"dbName\":null},{\"name\":\"FourWD\",\"dbName\":\"4WD\"}],\"dbName\":null},\"TransmissionType\":{\"values\":[{\"name\":\"Manual\",\"dbName\":null},{\"name\":\"Automatic\",\"dbName\":null}],\"dbName\":null},\"CompanyType\":{\"values\":[{\"name\":\"Maruti\",\"dbName\":\"Maruti Suzuki\"},{\"name\":\"Hyundai\",\"dbName\":null},{\"name\":\"Tata\",\"dbName\":null},{\"name\":\"Mahindra\",\"dbName\":null},{\"name\":\"Toyota\",\"dbName\":null},{\"name\":\"Honda\",\"dbName\":null},{\"name\":\"Kia\",\"dbName\":null},{\"name\":\"MG\",\"dbName\":\"MG Motor\"},{\"name\":\"Skoda\",\"dbName\":null},{\"name\":\"Volkswagen\",\"dbName\":null},{\"name\":\"Ford\",\"dbName\":null},{\"name\":\"Renault\",\"dbName\":null},{\"name\":\"Nissan\",\"dbName\":null},{\"name\":\"Mercedes\",\"dbName\":\"Mercedes-Benz\"},{\"name\":\"BMW\",\"dbName\":null},{\"name\":\"Audi\",\"dbName\":null},{\"name\":\"Lexus\",\"dbName\":null},{\"name\":\"Volvo\",\"dbName\":null},{\"name\":\"Jaguar\",\"dbName\":null},{\"name\":\"LandRover\",\"dbName\":\"Land Rover\"},{\"name\":\"Porsche\",\"dbName\":null},{\"name\":\"Ferrari\",\"dbName\":null},{\"name\":\"Lamborghini\",\"dbName\":null},{\"name\":\"Rolls\",\"dbName\":\"Rolls-Royce\"},{\"name\":\"Bentley\",\"dbName\":null},{\"name\":\"Jeep\",\"dbName\":null},{\"name\":\"Other\",\"dbName\":null}],\"dbName\":null}},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

